<?php

/**
 * BaseMoreInfoRealProperty
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $real_property_id
 * @property text $detail
 * @property string $toilets
 * @property string $garages
 * @property text $expense_security
 * @property text $writing_plans
 * @property text $benchmarks
 * @property text $transport
 * @property text $observations
 * @property text $address
 * @property RealProperty $RealProperty
 * 
 * @method integer              getId()               Returns the current record's "id" value
 * @method integer              getRealPropertyId()   Returns the current record's "real_property_id" value
 * @method text                 getDetail()           Returns the current record's "detail" value
 * @method string               getToilets()          Returns the current record's "toilets" value
 * @method string               getGarages()          Returns the current record's "garages" value
 * @method text                 getExpenseSecurity()  Returns the current record's "expense_security" value
 * @method text                 getWritingPlans()     Returns the current record's "writing_plans" value
 * @method text                 getBenchmarks()       Returns the current record's "benchmarks" value
 * @method text                 getTransport()        Returns the current record's "transport" value
 * @method text                 getObservations()     Returns the current record's "observations" value
 * @method text                 getAddress()          Returns the current record's "address" value
 * @method RealProperty         getRealProperty()     Returns the current record's "RealProperty" value
 * @method MoreInfoRealProperty setId()               Sets the current record's "id" value
 * @method MoreInfoRealProperty setRealPropertyId()   Sets the current record's "real_property_id" value
 * @method MoreInfoRealProperty setDetail()           Sets the current record's "detail" value
 * @method MoreInfoRealProperty setToilets()          Sets the current record's "toilets" value
 * @method MoreInfoRealProperty setGarages()          Sets the current record's "garages" value
 * @method MoreInfoRealProperty setExpenseSecurity()  Sets the current record's "expense_security" value
 * @method MoreInfoRealProperty setWritingPlans()     Sets the current record's "writing_plans" value
 * @method MoreInfoRealProperty setBenchmarks()       Sets the current record's "benchmarks" value
 * @method MoreInfoRealProperty setTransport()        Sets the current record's "transport" value
 * @method MoreInfoRealProperty setObservations()     Sets the current record's "observations" value
 * @method MoreInfoRealProperty setAddress()          Sets the current record's "address" value
 * @method MoreInfoRealProperty setRealProperty()     Sets the current record's "RealProperty" value
 * 
 * @package    sf_icox
 * @subpackage model
 * @author     pinika
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMoreInfoRealProperty extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('more_info_real_property');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('real_property_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('detail', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('toilets', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('garages', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('expense_security', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('writing_plans', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('benchmarks', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('transport', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('observations', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('address', 'text', null, array(
             'type' => 'text',
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('RealProperty', array(
             'local' => 'real_property_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'detail',
              1 => 'toilets',
              2 => 'garages',
              3 => 'expense_security',
              4 => 'writing_plans',
              5 => 'benchmarks',
              6 => 'transport',
              7 => 'observations',
              8 => 'address',
             ),
             ));
        $this->actAs($i18n0);
    }
}