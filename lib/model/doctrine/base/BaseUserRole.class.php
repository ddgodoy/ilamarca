<?php

/**
 * BaseUserRole
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $credentials
 * @property string $code
 * @property Doctrine_Collection $UserRole
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getCredentials() Returns the current record's "credentials" value
 * @method string              getCode()        Returns the current record's "code" value
 * @method Doctrine_Collection getUserRole()    Returns the current record's "UserRole" collection
 * @method UserRole            setId()          Sets the current record's "id" value
 * @method UserRole            setName()        Sets the current record's "name" value
 * @method UserRole            setCredentials() Sets the current record's "credentials" value
 * @method UserRole            setCode()        Sets the current record's "code" value
 * @method UserRole            setUserRole()    Sets the current record's "UserRole" collection
 * 
 * @package    sf_icox
 * @subpackage model
 * @author     pinika
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserRole extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_role');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('credentials', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('code', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AppUser as UserRole', array(
             'local' => 'id',
             'foreign' => 'user_role_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}