<?php

/**
 * BaseAppUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $last_name
 * @property string $email
 * @property string $address
 * @property string $phone
 * @property string $photo
 * @property string $salt
 * @property string $password
 * @property string $recover_token
 * @property boolean $enabled
 * @property datetime $last_access
 * @property integer $company_id
 * @property integer $user_role_id
 * @property Company $Company
 * @property UserRole $UserRole
 * @property Doctrine_Collection $VendorZones
 * @property Doctrine_Collection $AppUser
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getLastName()      Returns the current record's "last_name" value
 * @method string              getEmail()         Returns the current record's "email" value
 * @method string              getAddress()       Returns the current record's "address" value
 * @method string              getPhone()         Returns the current record's "phone" value
 * @method string              getPhoto()         Returns the current record's "photo" value
 * @method string              getSalt()          Returns the current record's "salt" value
 * @method string              getPassword()      Returns the current record's "password" value
 * @method string              getRecoverToken()  Returns the current record's "recover_token" value
 * @method boolean             getEnabled()       Returns the current record's "enabled" value
 * @method datetime            getLastAccess()    Returns the current record's "last_access" value
 * @method integer             getCompanyId()     Returns the current record's "company_id" value
 * @method integer             getUserRoleId()    Returns the current record's "user_role_id" value
 * @method Company             getCompany()       Returns the current record's "Company" value
 * @method UserRole            getUserRole()      Returns the current record's "UserRole" value
 * @method Doctrine_Collection getVendorZones()   Returns the current record's "VendorZones" collection
 * @method Doctrine_Collection getAppUser()       Returns the current record's "AppUser" collection
 * @method AppUser             setId()            Sets the current record's "id" value
 * @method AppUser             setName()          Sets the current record's "name" value
 * @method AppUser             setLastName()      Sets the current record's "last_name" value
 * @method AppUser             setEmail()         Sets the current record's "email" value
 * @method AppUser             setAddress()       Sets the current record's "address" value
 * @method AppUser             setPhone()         Sets the current record's "phone" value
 * @method AppUser             setPhoto()         Sets the current record's "photo" value
 * @method AppUser             setSalt()          Sets the current record's "salt" value
 * @method AppUser             setPassword()      Sets the current record's "password" value
 * @method AppUser             setRecoverToken()  Sets the current record's "recover_token" value
 * @method AppUser             setEnabled()       Sets the current record's "enabled" value
 * @method AppUser             setLastAccess()    Sets the current record's "last_access" value
 * @method AppUser             setCompanyId()     Sets the current record's "company_id" value
 * @method AppUser             setUserRoleId()    Sets the current record's "user_role_id" value
 * @method AppUser             setCompany()       Sets the current record's "Company" value
 * @method AppUser             setUserRole()      Sets the current record's "UserRole" value
 * @method AppUser             setVendorZones()   Sets the current record's "VendorZones" collection
 * @method AppUser             setAppUser()       Sets the current record's "AppUser" collection
 * 
 * @package    sf_icox
 * @subpackage model
 * @author     pinika
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAppUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('app_user');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('last_name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('address', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('phone', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('photo', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('salt', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('password', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('recover_token', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('enabled', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('last_access', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('company_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_role_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Company', array(
             'local' => 'company_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UserRole', array(
             'local' => 'user_role_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('VendorZone as VendorZones', array(
             'local' => 'id',
             'foreign' => 'app_user_id'));

        $this->hasMany('RealProperty as AppUser', array(
             'local' => 'id',
             'foreign' => 'app_user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}