<?php

/**
 * BaseSearchMatch
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $search_profile_id
 * @property integer $vendor_id
 * @property SearchProfile $SearchProfile
 * 
 * @method integer       getId()                Returns the current record's "id" value
 * @method integer       getSearchProfileId()   Returns the current record's "search_profile_id" value
 * @method integer       getVendorId()          Returns the current record's "vendor_id" value
 * @method SearchProfile getSearchProfile()     Returns the current record's "SearchProfile" value
 * @method SearchMatch   setId()                Sets the current record's "id" value
 * @method SearchMatch   setSearchProfileId()   Sets the current record's "search_profile_id" value
 * @method SearchMatch   setVendorId()          Sets the current record's "vendor_id" value
 * @method SearchMatch   setSearchProfile()     Sets the current record's "SearchProfile" value
 * 
 * @package    sf_icox
 * @subpackage model
 * @author     pinika
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSearchMatch extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('search_match');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('search_profile_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('vendor_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SearchProfile', array(
             'local' => 'search_profile_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}