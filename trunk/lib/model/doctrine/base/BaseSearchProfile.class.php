<?php

/**
 * BaseSearchProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $bedroom_id
 * @property integer $property_type_id
 * @property integer $operation_id
 * @property integer $geo_zone_id
 * @property integer $city_id
 * @property integer $neighborhood_id
 * @property integer $app_user_id
 * @property decimal $min_price
 * @property decimal $max_price
 * @property integer $currency_id
 * @property string $name
 * @property string $reference
 * @property Bedroom $Bedroom
 * @property PropertyType $PropertyType
 * @property Operation $Operation
 * @property GeoZone $GeoZone
 * @property City $City
 * @property Neighborhood $Neighborhood
 * @property AppUser $AppUser
 * @property Currency $Currency
 * @property Doctrine_Collection $SearchProfile
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getBedroomId()        Returns the current record's "bedroom_id" value
 * @method integer             getPropertyTypeId()   Returns the current record's "property_type_id" value
 * @method integer             getOperationId()      Returns the current record's "operation_id" value
 * @method integer             getGeoZoneId()        Returns the current record's "geo_zone_id" value
 * @method integer             getCityId()           Returns the current record's "city_id" value
 * @method integer             getNeighborhoodId()   Returns the current record's "neighborhood_id" value
 * @method integer             getAppUserId()        Returns the current record's "app_user_id" value
 * @method decimal             getMinPrice()         Returns the current record's "min_price" value
 * @method decimal             getMaxPrice()         Returns the current record's "max_price" value
 * @method integer             getCurrencyId()       Returns the current record's "currency_id" value
 * @method string              getName()             Returns the current record's "name" value
 * @method string              getReference()        Returns the current record's "reference" value
 * @method Bedroom             getBedroom()          Returns the current record's "Bedroom" value
 * @method PropertyType        getPropertyType()     Returns the current record's "PropertyType" value
 * @method Operation           getOperation()        Returns the current record's "Operation" value
 * @method GeoZone             getGeoZone()          Returns the current record's "GeoZone" value
 * @method City                getCity()             Returns the current record's "City" value
 * @method Neighborhood        getNeighborhood()     Returns the current record's "Neighborhood" value
 * @method AppUser             getAppUser()          Returns the current record's "AppUser" value
 * @method Currency            getCurrency()         Returns the current record's "Currency" value
 * @method Doctrine_Collection getSearchProfile()    Returns the current record's "SearchProfile" collection
 * @method SearchProfile       setId()               Sets the current record's "id" value
 * @method SearchProfile       setBedroomId()        Sets the current record's "bedroom_id" value
 * @method SearchProfile       setPropertyTypeId()   Sets the current record's "property_type_id" value
 * @method SearchProfile       setOperationId()      Sets the current record's "operation_id" value
 * @method SearchProfile       setGeoZoneId()        Sets the current record's "geo_zone_id" value
 * @method SearchProfile       setCityId()           Sets the current record's "city_id" value
 * @method SearchProfile       setNeighborhoodId()   Sets the current record's "neighborhood_id" value
 * @method SearchProfile       setAppUserId()        Sets the current record's "app_user_id" value
 * @method SearchProfile       setMinPrice()         Sets the current record's "min_price" value
 * @method SearchProfile       setMaxPrice()         Sets the current record's "max_price" value
 * @method SearchProfile       setCurrencyId()       Sets the current record's "currency_id" value
 * @method SearchProfile       setName()             Sets the current record's "name" value
 * @method SearchProfile       setReference()        Sets the current record's "reference" value
 * @method SearchProfile       setBedroom()          Sets the current record's "Bedroom" value
 * @method SearchProfile       setPropertyType()     Sets the current record's "PropertyType" value
 * @method SearchProfile       setOperation()        Sets the current record's "Operation" value
 * @method SearchProfile       setGeoZone()          Sets the current record's "GeoZone" value
 * @method SearchProfile       setCity()             Sets the current record's "City" value
 * @method SearchProfile       setNeighborhood()     Sets the current record's "Neighborhood" value
 * @method SearchProfile       setAppUser()          Sets the current record's "AppUser" value
 * @method SearchProfile       setCurrency()         Sets the current record's "Currency" value
 * @method SearchProfile       setSearchProfile()    Sets the current record's "SearchProfile" collection
 * 
 * @package    sf_icox
 * @subpackage model
 * @author     pinika
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSearchProfile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('search_profile');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('bedroom_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('property_type_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('operation_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('geo_zone_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('city_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('neighborhood_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('app_user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('min_price', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'length' => 10,
             ));
        $this->hasColumn('max_price', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'length' => 10,
             ));
        $this->hasColumn('currency_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('reference', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Bedroom', array(
             'local' => 'bedroom_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('PropertyType', array(
             'local' => 'property_type_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Operation', array(
             'local' => 'operation_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('GeoZone', array(
             'local' => 'geo_zone_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('City', array(
             'local' => 'city_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Neighborhood', array(
             'local' => 'neighborhood_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('AppUser', array(
             'local' => 'app_user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Currency', array(
             'local' => 'currency_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('SearchMatch as SearchProfile', array(
             'local' => 'id',
             'foreign' => 'search_profile_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}