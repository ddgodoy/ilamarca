<?php

/**
 * BaseSearchContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $app_user_id
 * @property integer $real_property_id
 * @property integer $vendor_id
 * @property text $comments
 * @property AppUser $AppUser
 * @property RealProperty $RealProperty
 * 
 * @method integer       getId()               Returns the current record's "id" value
 * @method integer       getAppUserId()        Returns the current record's "app_user_id" value
 * @method integer       getRealPropertyId()   Returns the current record's "real_property_id" value
 * @method integer       getVendorId()         Returns the current record's "vendor_id" value
 * @method text          getComments()         Returns the current record's "comments" value
 * @method AppUser       getAppUser()          Returns the current record's "AppUser" value
 * @method RealProperty  getRealProperty()     Returns the current record's "RealProperty" value
 * @method SearchContact setId()               Sets the current record's "id" value
 * @method SearchContact setAppUserId()        Sets the current record's "app_user_id" value
 * @method SearchContact setRealPropertyId()   Sets the current record's "real_property_id" value
 * @method SearchContact setVendorId()         Sets the current record's "vendor_id" value
 * @method SearchContact setComments()         Sets the current record's "comments" value
 * @method SearchContact setAppUser()          Sets the current record's "AppUser" value
 * @method SearchContact setRealProperty()     Sets the current record's "RealProperty" value
 * 
 * @package    sf_icox
 * @subpackage model
 * @author     pinika
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSearchContact extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('search_contact');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('app_user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('real_property_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('vendor_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('comments', 'text', null, array(
             'type' => 'text',
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AppUser', array(
             'local' => 'app_user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('RealProperty', array(
             'local' => 'real_property_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}