<?php

/**
 * BaseCity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $geo_zone_id
 * @property GeoZone $GeoZone
 * @property Doctrine_Collection $City
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method integer             getGeoZoneId()   Returns the current record's "geo_zone_id" value
 * @method GeoZone             getGeoZone()     Returns the current record's "GeoZone" value
 * @method Doctrine_Collection getCity()        Returns the current record's "City" collection
 * @method City                setId()          Sets the current record's "id" value
 * @method City                setName()        Sets the current record's "name" value
 * @method City                setGeoZoneId()   Sets the current record's "geo_zone_id" value
 * @method City                setGeoZone()     Sets the current record's "GeoZone" value
 * @method City                setCity()        Sets the current record's "City" collection
 * 
 * @package    sf_icox
 * @subpackage model
 * @author     pinika
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCity extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('city');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('geo_zone_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('GeoZone', array(
             'local' => 'geo_zone_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Neighborhood as City', array(
             'local' => 'id',
             'foreign' => 'city_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}