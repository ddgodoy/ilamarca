<?php

/**
 * RealProperty
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_icox
 * @subpackage model
 * @author     pinika
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class RealProperty extends BaseRealProperty
{
	/**
   * Upload pdf_file process
   *
   * @param array $file
   * @param mixed $recorded
   * @param boolean $reset
   */
  public static function uploadPdfFile($file, $recorded, $reset = false)
  {
  	$destination = ServiceFileHandler::getUploadFolder('pdf_file');

  	if ($file['size'] > 0) {
	  	$f_extension = strtolower(strrchr($file['name'], '.'));
			$upload_file = date('Y').'/'.uniqid('').$f_extension;

			if (move_uploaded_file($file['tmp_name'], $destination.$upload_file)) {
				if ($recorded->getPdfFile()) {
					@unlink($destination.$recorded->getPdfFile());
				}
				@chmod($destination.$upload_file, 0777);
				$recorded->setPdfFile($upload_file);
			}
  	} elseif ($reset && $recorded->getPdfFile()) {
  		@unlink($destination.$recorded->getPdfFile());

  		$recorded->setPdfFile(NULL);
  	}
  	$recorded->save();
  }

  /**
   * Create qr code type url linked to frontend property deatail
   *
   * @param boolean $create_now
   * @param object $property_id
   */
  public static function createPropertyQrCode($create_now, $property)
  {
  	if ($create_now)
  	{
  		// get host
  		$request = sfContext::getInstance()->getRequest();

			$host = $request->isSecure() ? 'https://' : 'http://';
	    $host.= $request->getHost();
  		//
  		$qr = new BarcodeQR();
  		$nm = uniqid('').'.png';
  		$fl = sfConfig::get('sf_web_dir').'/uploads/qr_codes/'.$nm;

  		$qr->url("$host/property?id=".$property->getId());
  		$qr->draw(200, $fl);

  		@chmod($fl, 0777);

  		$property->setQrCode($nm);
  		$property->save();
  	}
  }
  
  /**
   * Get property list for newsletter
   *
   * @return object
   */
  public static function getListForNewsletter()
  {
  	$sUser   = sfContext::getInstance()->getUser();
    $content = $sUser->getAttribute('properties_in_cart', array());
    $sFilter = '';
    
    foreach ($content as $property) {
    	$sFilter .= $property.',';
    }
    $sFilter .= substr($sFilter, 0, -1);
    
    if (!empty($sFilter)) {
    	return RealPropertyTable::getInstance()->getDbPropertyListaForNs($sFilter);
    } else {
    	return array();
    }
  }

} // end class